---
variables:
  RUBY_VERSION_COMPATIBLE: "2.3.4"
  RUBY_VERSION_LATEST: "2.5"
  RVM_GEMSET: "qat-cucumber"
  RVM_COMMAND: "rvm-exec $RUBY_VERSION@$RVM_GEMSET"

stages:
  - validation
  - analysis
#  - test
  - build
  - deploy
  - release

.ruby:install_compatible: &ruby_install_compatible
  before_script:
    - rvm install $RUBY_VERSION_COMPATIBLE
    - rvm $RUBY_VERSION_COMPATIBLE do rvm gemset create $RVM_GEMSET
    - $RVM_COMMAND gem sources --add $NEXUS_GEM_SOURCE_URL
    - $RVM_COMMAND gem install bundler --no-document
    - $RVM_COMMAND gem update bundler --no-document
    - $RVM_COMMAND bundle config mirror.https://rubygems.org $NEXUS_GEM_MIRROR_URL
    - $RVM_COMMAND bundle config $NEXUS_HOST $NEXUS_USER:$NEXUS_PASS
    - $RVM_COMMAND bundle update

.ruby:install_latest: &ruby_install_latest
  before_script:
    - rvm install $RUBY_VERSION_LATEST
    - rvm $RUBY_VERSION_LATEST do rvm gemset create $RVM_GEMSET
    - $RVM_COMMAND gem sources --add $NEXUS_GEM_SOURCE_URL
    - $RVM_COMMAND gem install bundler --no-document
    - $RVM_COMMAND gem update bundler --no-document
    - $RVM_COMMAND bundle config mirror.https://rubygems.org $NEXUS_GEM_MIRROR_URL
    - $RVM_COMMAND bundle config $NEXUS_HOST $NEXUS_USER:$NEXUS_PASS
    - $RVM_COMMAND bundle update

.tags: &tags
  tags:
    - ruby
    - cucumber

#.ruby-tests: &ruby_tests
#  stage: test
#  script:
#    - $RVM_COMMAND bundle exec rake qat:devel:tests:run
#  coverage: /qa-toolkit\/qat-cucumber\/test\/coverage. \d+ \/ \d+ LOC \((\d+\.\d+)%\) covered/
#  except:
#    - develop
#    - master
#    - tags
#  artifacts:
#    paths:
#      - test/public/index.html
#      - test/coverage/
#    when: always
#    expire_in: 1 day
#  allow_failure: true

.ruby_n_tags: &ruby_n_tags
  <<: *ruby_install_latest
  <<: *tags

.ruby-analisys: &ruby_analisys
  <<: *ruby_n_tags
  stage: analysis
  except:
    - master
    - tags

################
## validation ##
################
validation:version:
  <<: *tags
  <<: *ruby_install_latest
  stage: validation
  script:
    - $RVM_COMMAND ruby -e "require './lib/qat/cucumber/version'; raise StandardError.new unless Gem::Specification::load('qat-cucumber.gemspec').version.to_s == QAT::Cucumber::VERSION"
  except:
    - master
    - tags

validation:existing_tag:
  <<: *tags
  <<: *ruby_install_latest
  stage: validation
  script:
    - $RVM_COMMAND bundle exec rake qat:devel:gitlab:check_version_tags
  except:
    - master
    - tags

##############
## analysis ##
##############
analysis:documentation:
  <<: *ruby_analisys
  script:
    - $RVM_COMMAND bundle exec rake qat:devel:validate_yard_doc
  coverage: /(\d+\.\d+)% documented/
  artifacts:
    paths:
      - doc/
    when: always
    expire_in: 1 day

analysis:static:
  <<: *ruby_analisys
  script:
    - $RVM_COMMAND bundle exec rake qat:devel:static_analysis:html
    - $RVM_COMMAND bundle exec rake qat:devel:static_analysis:validation
  artifacts:
    paths:
      - test/public/rubycritic/
    when: always
    expire_in: 1 day
  allow_failure: true

##########
## test ##
##########
#test:ruby-2.3:
#  <<: *tags
#  <<: *ruby_install_compatible
#  <<: *ruby_tests
#
#test:ruby-2.5:
#  <<: *tags
#  <<: *ruby_install_latest
#  <<: *ruby_tests

###########
## build ##
###########
build:gem:
  <<: *ruby_n_tags
  stage: build
  script:
    - $RVM_COMMAND gem build qat-cucumber.gemspec
  artifacts:
    paths:
      - qat-cucumber-*.gem
    when: always
    expire_in: 1 day
  only:
    - develop
    - tags

############
## deploy ##
############
deploy:and-test:
  <<: *tags
  stage: deploy
  script:
    - $RVM_COMMAND bundle exec rake qat:cucumber:gemfile:example
    - rvm gemset copy $RUBY_VERSION_LATEST@$RVM_GEMSET $RUBY_VERSION_LATEST@$RVM_GEMSET-testing
    - GEM_VERSION=$($RVM_COMMAND ruby -e "puts Gem::Specification::load('qat-cucumber.gemspec').version" | tail -1)
    - echo $GEM_VERSION
    - rvm-exec $RUBY_VERSION_LATEST@$RVM_GEMSET-testing gem uninstall qat-cucumber --force
    - rvm-exec $RUBY_VERSION_LATEST@$RVM_GEMSET-testing gem install qat-cucumber-$GEM_VERSION.gem
    - rm -f Gemfile.lock
    - rvm-exec $RUBY_VERSION_LATEST@$RVM_GEMSET-testing bundle install --gemfile=Gemfile.example
#    - rvm-exec $RUBY_VERSION_LATEST@$RVM_GEMSET-testing bundle exec rake qat:devel:tests:run
  after_script:
    - rvm $RUBY_VERSION_LATEST do rvm gemset delete $RVM_GEMSET-testing --force
  dependencies:
    - build:gem
  except:
    - master
    - tags
  only:
    - develop
  allow_failure: true

#############
## release ##
#############
release:tag:
  <<: *ruby_n_tags
  stage: release
  script:
    - $RVM_COMMAND bundle exec rake qat:devel:gitlab:milestone_tag
  only:
    - master

release:gem:
  tags:
    - geminabox
  stage: release
  script:
    - gem inabox qat-cucumber-*.gem
  environment:
    name: nexus
    url: https://nexus.readinessit.com/repository/rit-ruby/
  dependencies:
    - build:gem
  only:
    - tags
